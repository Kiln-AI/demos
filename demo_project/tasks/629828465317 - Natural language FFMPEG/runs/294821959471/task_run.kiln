{
  "v": 1,
  "id": "294821959471",
  "created_at": "2025-07-24T20:25:00.613088",
  "created_by": "scosman",
  "input": "How do I encode a .wav voice memo as ADPCM-wav for use in old embedded devices?",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Codec Selection and Adjustment"
    }
  },
  "output": {
    "v": 1,
    "id": "120370721660",
    "path": null,
    "created_at": "2025-07-24T20:25:00.613062",
    "created_by": "scosman",
    "output": "To encode a .wav file to ADPCM WAV format for compatibility with older embedded devices, you should convert the PCM audio to an ADPCM codec supported in WAV containers, such as IMA ADPCM (`adpcm_ima_wav`). This codec is widely supported and commonly used in embedded systems.\n\nKey points:\n- `-c:a adpcm_ima_wav` selects the IMA ADPCM codec for audio.\n- No re-encoding of video is needed (usually none if input is audio-only).\n- You can optionally specify the audio sample rate (e.g., 22050 or 16000 Hz) and mono channel output to match device requirements.\n- WAV as the output container remains compatible.\n\nExample command assumes input.wav is a PCM WAV file, outputting to output_adpcm.wav:\n\n```bash\nffmpeg -i input.wav -c:a adpcm_ima_wav -ar 22050 -ac 1 output_adpcm.wav\n```\n\nExplanation:\n- `-ar 22050` sets the sample rate to 22.05 kHz, common for embedded voice.\n- `-ac 1` ensures mono audio, typical for voice memos.\n- The `adpcm_ima_wav` codec uses a compressed ADPCM format widely supported by older hardware.\n\nAdjust sample rate and channels to your device's specs if needed. This approach provides good compression with acceptable voice quality for legacy embedded playback.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 595,
    "output_tokens": 290,
    "total_tokens": 885,
    "cost": 0.000702
  },
  "model_type": "task_run"
}
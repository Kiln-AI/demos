{
  "v": 1,
  "id": "214497492238",
  "created_at": "2025-07-24T20:37:29.040188",
  "created_by": "scosman",
  "input": "How do I change the order of audio streams in an mkv file, just copying streams?",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Stream Copying and Remuxing"
    }
  },
  "output": {
    "v": 1,
    "id": "218758231040",
    "path": null,
    "created_at": "2025-07-24T20:37:29.040143",
    "created_by": "scosman",
    "output": "To change the order of audio streams in an MKV file without re-encoding (stream copying), you can use the `-map` option to explicitly specify the order of streams you want in the output file. This way, ffmpeg copies the streams as-is, just remuxing them in the desired order.\n\nKey points:\n- Use `-c copy` to copy all streams without re-encoding.\n- Use `-map` to select and reorder streams. You specify streams by their type and stream index (e.g., 0:a:1 for the second audio stream of the first input).\n- Map the video and subtitle streams as is (or reorder if needed).\n- The output container remains MKV to preserve compatibility.\n\nAssuming your input MKV has one video stream and multiple audio streams, and you want to reorder audio streams, for example switching the first and second audio streams, you would identify the correct stream indices with `ffprobe` or `ffmpeg -i input.mkv`.\n\nExample command to reorder audio streams (swapping audio stream 0 and 1, and keeping the video as is):\n\n```bash\nffmpeg -i input.mkv -map 0:v -map 0:a:1 -map 0:a:0 -map 0:s? -c copy output.mkv\n```\n\nExplanation:\n- `-map 0:v` maps all video streams from input 0 (usually one main video stream).\n- `-map 0:a:1` maps the second audio stream first.\n- `-map 0:a:0` maps the first audio stream second.\n- `-map 0:s?` maps all subtitle streams if any (the `?` makes it optional so no error if none).\n- `-c copy` copies the streams without re-encoding.\n\nAdjust stream indices according to your input to get the desired order. You can run `ffprobe input.mkv` to see stream info and numbers.\n\nThis approach ensures only stream order changes, with no quality loss or processing overhead.\n\n```bash\nffmpeg -i input.mkv -map 0:v -map 0:a:1 -map 0:a:0 -map 0:s? -c copy output.mkv\n```",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 596,
    "output_tokens": 463,
    "total_tokens": 1059,
    "cost": 0.0009792
  },
  "model_type": "task_run"
}
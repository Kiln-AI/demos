{
  "v": 1,
  "id": "854626603670",
  "created_at": "2025-07-24T20:24:01.392807",
  "created_by": "scosman",
  "input": "Scale animal.mov to width 1920px and set output to high quality HEVC (h.265) encoding.",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Video Resolution and Scaling"
    }
  },
  "output": {
    "v": 1,
    "id": "758851656970",
    "path": null,
    "created_at": "2025-07-24T20:24:01.392783",
    "created_by": "scosman",
    "output": "To scale the video to a width of 1920 pixels while maintaining the aspect ratio, use the `scale` video filter with width set to 1920 and height to -2 (which automatically calculates height preserving aspect ratio and ensures it's divisible by 2 for codec compatibility). For high-quality HEVC encoding, use `libx265` codec, a preset like `slow` for better compression efficiency, and a CRF value around 18-22 for visually good quality (lower CRF means better quality). Audio can be copied or re-encoded depending on your needs; here, we copy audio stream to preserve original quality.\n\n- `-vf scale=1920:-2`: scale width to 1920, maintain aspect ratio.\n- `-c:v libx265`: use HEVC codec.\n- `-preset slow`: better compression, slower encoding.\n- `-crf 20`: balanced high quality.\n- `-c:a copy`: copy audio stream as-is.\n\n```bash\nffmpeg -i animal.mov -vf scale=1920:-2 -c:v libx265 -preset slow -crf 20 -c:a copy output_hevc_1920p.mkv\n```\n\nAssumptions: input video is at least 1920 pixels wide or wider, and the output container supports HEVC (like MKV). Using MKV container is recommended because it better supports HEVC streams and preserves quality. If MP4 is needed, ensure your player supports HEVC in MP4.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 598,
    "output_tokens": 310,
    "total_tokens": 908,
    "cost": 0.0007352
  },
  "model_type": "task_run"
}
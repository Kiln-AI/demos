{
  "v": 1,
  "id": "264528195827",
  "created_at": "2025-07-24T20:25:31.171244",
  "created_by": "scosman",
  "input": "I want to filter out all non-video/non-audio streams when remuxing to .mp4.",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Stream Copying and Remuxing"
    }
  },
  "output": {
    "v": 1,
    "id": "312798203246",
    "path": null,
    "created_at": "2025-07-24T20:25:31.171222",
    "created_by": "scosman",
    "output": "To remux a file to MP4 while preserving only video and audio streams, you can use stream selection options in ffmpeg. The `-map` option allows explicit control over which streams to include. Using `-map 0:v` selects all video streams from the first input, and `-map 0:a` selects all audio streams from the first input. This ensures all other streams (like subtitles, data, or attachments) are excluded.\n\nUsing `-c copy` performs stream copy (remuxing) without re-encoding, which preserves quality and is very fast.\n\nHere's the command to remux the input file to an MP4 containing only video and audio streams:\n\n```bash\nffmpeg -i input.ext -map 0:v -map 0:a -c copy output.mp4\n```\n\n**Assumptions:**\n- The input file is `input.ext` (replace with your actual input filename).\n- You want to keep all video/audio streams, even if there are multiple.\n- No re-encoding is needed; it's purely remuxing.\n- If your input does not contain audio or video streams, this will cause an error; adjust accordingly in such cases.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 598,
    "output_tokens": 244,
    "total_tokens": 842,
    "cost": 0.0006296
  },
  "model_type": "task_run"
}
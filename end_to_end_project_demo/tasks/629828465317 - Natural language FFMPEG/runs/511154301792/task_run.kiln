{
  "v": 1,
  "id": "511154301792",
  "created_at": "2025-07-24T20:24:55.039823",
  "created_by": "scosman",
  "input": "Convert a .ts MPEG transport stream (H.264 video, MPEG-2 audio) to .mp4 (keep codecs).",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Codec Selection and Adjustment"
    }
  },
  "output": {
    "v": 1,
    "id": "165705547071",
    "path": null,
    "created_at": "2025-07-24T20:24:55.039741",
    "created_by": "scosman",
    "output": "To convert a .ts MPEG transport stream containing H.264 video and MPEG-2 audio to an .mp4 container without re-encoding (keeping the original codecs), you can use stream copy mode in ffmpeg. This is done with the `-c copy` parameter, which copies the audio and video streams as-is to the new container, ensuring no quality loss or additional encoding time.\n\nSince MP4 containers generally support H.264 video and MPEG-2 audio can be atypical, the resulting MP4 may not be compatible with all players if the MPEG-2 audio track isn't supported. If compatibility becomes an issue, consider converting the audio codec to AAC.\n\nCommand:\n\n```bash\nffmpeg -i input.ts -c copy -movflags +faststart output.mp4\n```\n\nExplanation:\n- `-i input.ts`: input MPEG transport stream file.\n- `-c copy`: copy all streams without re-encoding.\n- `-movflags +faststart`: move MP4 metadata to the beginning for better streaming compatibility.\n\nThis method is efficient and lossless but assumes your players support MPEG-2 audio inside MP4.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 600,
    "output_tokens": 230,
    "total_tokens": 830,
    "cost": 0.000608
  },
  "model_type": "task_run"
}
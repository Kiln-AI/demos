{
  "v": 1,
  "id": "263657264238",
  "created_at": "2025-07-24T20:35:35.643107",
  "created_by": "scosman",
  "input": "Change the pitch of input.wav up by 2 semitones, save as pitched.wav.",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Audio Extraction and Manipulation"
    }
  },
  "output": {
    "v": 1,
    "id": "645597743498",
    "path": null,
    "created_at": "2025-07-24T20:35:35.643085",
    "created_by": "scosman",
    "output": "To increase the pitch of an audio file by 2 semitones using FFmpeg, you can use the `asetrate` filter combined with `atempo` to maintain the original duration (tempo). Changing the sample rate by a factor corresponding to the pitch shift will change pitch and speed, so we adjust the playback speed afterward to preserve the original tempo.\n\nPitch shift factor for 2 semitones up:\npitch_factor = 2^(2/12) ≈ 1.1225\n\nThe process:\n- Use `asetrate=sample_rate*pitch_factor` to increase pitch by changing the sample rate.\n- Resample back to original sample rate to match output specifications.\n- Use `atempo` with inverse of pitch_factor (≈ 1/1.1225 ≈ 0.89) to keep the tempo consistent.\n\nNote: The `atempo` filter only accepts values between 0.5 and 2.0, so 0.89 is valid here.\n\n```bash\nffmpeg -i input.wav -filter_complex \"asetrate=sample_rate*1.1225,atempo=0.89,aresample=sample_rate\" pitched.wav\n```\n\nExplanation:\n- `sample_rate` is the actual sample rate of the input audio; using the variable `sample_rate` allows FFmpeg to detect and use it automatically.\n- `asetrate=sample_rate*1.1225` shifts pitch up by 2 semitones by increasing playback rate.\n- `atempo=0.89` slows down audio to original tempo (inverse of pitch_factor).\n- `aresample=sample_rate` ensures output audio sample rate matches the original.\n\nIf the above causes audio length distortion or glitches, a two-pass approach with the `rubberband` filter might be better, but this is a widely compatible and simpler approach. \n\nFull command with variable expansion:\n\n```bash\nffmpeg -i input.wav -filter_complex \"asetrate=sample_rate*1.1225,atempo=0.89,aresample=sample_rate\" pitched.wav\n```\n\nIf you want to specify numeric sample rate explicitly (e.g., 44100 Hz):\n\n```bash\nffmpeg -i input.wav -filter_complex \"asetrate=44100*1.1225,atempo=0.89,aresample=44100\" pitched.wav\n```\n\nAssumptions:\n- Input is a mono or stereo WAV file with a standard sample rate.\n- Pitch is shifted up by exactly 2 semitones.\n- Preserving duration (tempo) is desired.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 594,
    "output_tokens": 536,
    "total_tokens": 1130,
    "cost": 0.0010952
  },
  "model_type": "task_run"
}
{
  "v": 1,
  "id": "710991304793",
  "created_at": "2025-07-24T20:37:25.448708",
  "created_by": "scosman",
  "input": "How do I copy a video stream from one file and an audio stream from another into a new output, using stream copying for both?",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Stream Copying and Remuxing"
    }
  },
  "output": {
    "v": 1,
    "id": "118784481844",
    "path": null,
    "created_at": "2025-07-24T20:37:25.448681",
    "created_by": "scosman",
    "output": "To copy a video stream from one file and an audio stream from another file into a new output while using stream copying, you can use `-c copy` to avoid re-encoding. You need to specify input files and map the desired streams explicitly.\n\n- `-i input_video.mp4` is your video source.\n- `-i input_audio.mka` is your audio source.\n- `-map 0:v:0` maps the first video stream from the first input.\n- `-map 1:a:0` maps the first audio stream from the second input.\n- `-c copy` tells ffmpeg to do a stream copy (no re-encoding).\n\nThis approach assumes each input file has the desired stream, and you want to combine them into a single container. Make sure your output container supports the input streams' codecs.\n\n```bash\nffmpeg -i input_video.mp4 -i input_audio.mka -map 0:v:0 -map 1:a:0 -c copy output.mkv\n```",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 604,
    "output_tokens": 212,
    "total_tokens": 816,
    "cost": 0.0005808
  },
  "model_type": "task_run"
}
{
  "v": 1,
  "id": "175456851065",
  "created_at": "2025-07-24T20:25:28.909321",
  "created_by": "scosman",
  "input": "I want to split a .mp4 into separate video and audio files with no re-encoding. What's the command?",
  "input_source": {
    "type": "synthetic",
    "properties": {
      "model_name": "gpt_4_1",
      "model_provider": "openrouter",
      "adapter_name": "kiln_data_gen",
      "topic_path": "Stream Copying and Remuxing"
    }
  },
  "output": {
    "v": 1,
    "id": "288353562672",
    "path": null,
    "created_at": "2025-07-24T20:25:28.909293",
    "created_by": "scosman",
    "output": "To split an MP4 file into separate video and audio files without re-encoding, use stream copy mode by specifying `-c:v copy` and `-c:a copy`. This extracts the original streams directly, preserving quality and being very fast.\n\n- `-map 0:v:0` selects the first video stream from the input.\n- `-map 0:a:0` selects the first audio stream from the input.\n- Copying codecs (`-c copy` or specifying `-c:v copy -c:a copy`) disables re-encoding.\n- Output container formats must be compatible with the raw streams; MP4 for video and typically an audio container like AAC or MP3 based on the audio codec. If extracting raw audio, you can just use the original codec extension or convert containerâ€”for example, `audio.aac`.\n\nAssuming the input file is `input.mp4` and you want to generate `video.mp4` and `audio.aac` (assuming the audio codec is AAC):\n\n```bash\nffmpeg -i input.mp4 -map 0:v:0 -c:v copy -an video.mp4 -map 0:a:0 -c:a copy -vn audio.aac\n```\n\nThis command outputs the video only in `video.mp4` and the audio only in `audio.aac` without re-encoding. If your audio codec is different, adjust the audio file extension accordingly.",
    "source": {
      "type": "synthetic",
      "properties": {
        "adapter_name": "kiln_openai_compatible_adapter",
        "model_name": "gpt_4_1_mini",
        "model_provider": "openrouter",
        "prompt_id": "simple_prompt_builder",
        "structured_output_mode": "json_schema",
        "temperature": 1.0,
        "top_p": 1.0
      }
    },
    "rating": null,
    "model_type": "task_output"
  },
  "repair_instructions": null,
  "repaired_output": null,
  "intermediate_outputs": {},
  "tags": [
    "synthetic",
    "synthetic_session_732947559261",
    "fine_tune_data"
  ],
  "usage": {
    "input_tokens": 601,
    "output_tokens": 291,
    "total_tokens": 892,
    "cost": 0.000706
  },
  "model_type": "task_run"
}
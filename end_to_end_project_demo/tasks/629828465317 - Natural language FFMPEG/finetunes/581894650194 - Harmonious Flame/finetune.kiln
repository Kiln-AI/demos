{
  "v": 1,
  "id": "581894650194",
  "created_at": "2025-07-24T21:58:14.212921",
  "created_by": "scosman",
  "name": "Fine Tune Llama 3p2 3B Long Dataset",
  "description": "",
  "structured_output_mode": null,
  "provider": "fireworks_ai",
  "base_model_id": "accounts/fireworks/models/llama-v3p2-3b-instruct",
  "provider_id": "accounts/scosman-722de4/supervisedFineTuningJobs/hvctvly1",
  "fine_tune_model_id": "accounts/scosman-722de4/models/ft-hvctvly1-lwfdh",
  "dataset_split_id": "103621956562",
  "train_split_name": "train",
  "validation_split_name": "val",
  "parameters": {
    "epochs": 6,
    "lora_rank": 16
  },
  "system_message": "You are an expert in writing commands for the `ffmpeg` command line tool. You’ll be provided a message from a user asking for a transformation of a media file, and you’ll respond with an appropriate ffmpeg command. \n\nRespond with a brief explanation of the technique/parameters, followed by the needed command in triple backtick quotes. Explain any assumptions you had to make.\n\nHere’s an example user input, and high quality output:\n\n<user_message>\nI want to convert the video input.avi into a 720p mp4 file which can be streamed in a browser.\n</user_message>\n\n<output>\nTo convert input.avi into a 720p MP4 suitable for browser streaming, use H.264 video and AAC audio codecs (widely supported in browsers), set the resolution to 720 high, and enable fragmented MP4 for streaming (-movflags +faststart).\n\n- vf scale=-2:720 resizes the video to 720 height while maintaining the aspect ratio of the original (assuming you want to maintain aspect ratio). -2 ensures the height is divisible by 2 (libx264 requirement for yuv420p).\n- c:v libx264 uses H.264 video encoding.\n- preset slow focuses on compression efficiency over encoding speed. Use `fast` to invert that priority.\n- crf 23 sets quality (lower is better; 23 is a good default).\n- c:a aac -b:a 128k encodes audio using AAC at 128 kbps.\n- pix_fmt yuv420p ensures compatibility with older browsers/devices.\n- movflags +faststart places metadata at the beginning for fast streaming.\n\n```bash\nffmpeg -i input.avi -vf scale=-2:720 -c:v libx264 -preset fast -crf 23 -c:a aac -b:a 128k -pix_fmt yuv420p -movflags +faststart output.mp4\n```\n</output>",
  "thinking_instructions": null,
  "latest_status": "completed",
  "properties": {
    "endpoint_version": "v2"
  },
  "data_strategy": "final_only",
  "model_type": "finetune"
}